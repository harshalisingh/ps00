;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname |26|) (read-case-sensitive #t) (teachpacks ((lib "image.rkt" "teachpack" "2htdp") (lib "universe.rkt" "teachpack" "2htdp"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "image.rkt" "teachpack" "2htdp") (lib "universe.rkt" "teachpack" "2htdp")))))
;; 26.rkt

(require rackunit)
(require "extras.rkt")

;; DATA DEFINITIONS:

;empty scene
(define MTSCN (empty-scene 300 300))

(define-struct point (x y))
;; A Point is a (make-point Number Number).
;; It represents a position on the screen.
;; Interpretation:
;;   x = the x-coordinate on the screen (in pixels from the left).
;;   y = the y-coordinate on the screen (in pixels from the top).

;; point-fn : Point -> ?
;; (define (point fn a)
;;    (... (point-x a) (point-y a)))

;; ListofPoints

;; A ListofPoints (LOP) is one of:
;  -- empty
;  -- (cons Point LOP)

;;lop-fn : LOP -> ?
;;(define (lop-fn lop)
;;  (cond 
;;    [(empty? lop) ...]
;;    [else (...
;;           (point-fn (first lop))
;;           (lop-fn (rest lop)))]))

;; draw : ListofPoints -> Circle
;; GIVEN: a list of points
;; RETURNS: a solid blue circle with radius 10 
;;          at every point in the list into a 300X300 scene

;; EXAMPLES:





